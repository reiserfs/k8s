---
# tasks file for k8smaster
- name: Update all installed packages using YUM module
  yum:
    name: '*'
    state: latest
    update_cache: yes
    update_only: yes
  register: yum_update_status

- name: Add docker repository
  shell:
    cmd: |
      dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo

- name: Add k8s repository
  shell:
    cmd: |
      cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      exclude=kubelet kubeadm kubectl
      EOF

- name: Disable swap
  shell:
    cmd: |
      swapoff -a
      sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      setenforce 0
      sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

- name: install docker packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{  docker_packages }}"

- name: Install k8s packages - kubelet kubeadm kubectl
  shell: dnf install -y {kubelet,kubeadm,kubectl} --disableexcludes=kubernetes

- name: Setup containerd
  shell:
    cmd: |
      containerd config default > /etc/containerd/config.toml
      sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

- name: start containerd
  service:
    name: containerd
    state: started
    enabled: yes

- name: Add netfilter module
  modprobe:
    name: br_netfilter
    state: present

- name: Creating a file with content
  copy:
    dest: "/etc/modprobe.d/br_netfilter.conf"
    content: |
      br_netfilter

- name: Enable IP Forward
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: Test k8s cluster
  shell: kubectl get node {{ groups['master'][0] }}
  ignore_errors: True
  register: kubeadm_init

- name: Kubeadm init
  shell: kubeadm init --pod-network-cidr=10.87.0.0/16
  ignore_errors: True
  when: kubeadm_init.stderr != ""

- name: start kubelet service
  service:
    name: kubelet
    state: started
    enabled: yes

- name: create kube root config dir
  file:
    name: /root/.kube
    state: directory

- name: Copy k8s config for root
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: true

- name: Kubeadm apply network plugin calico
  shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
  notify:
  - Restart kubelet

- name: FirewallD rules
  firewalld:
    permanent: yes
    immediate: yes
    port: "{{item.port}}/{{item.proto}}"
    state: "{{item.state}}"
    zone: "{{item.zone}}"
  with_items:
   - {port: "6443", proto: "tcp", state: "enabled", zone: "public" }
   - {port: "2379-2380", proto: "tcp", state: "enabled", zone: "public" }
   - {port: "10250", proto: "tcp", state: "enabled", zone: "public" }
   - {port: "10259", proto: "tcp", state: "enabled", zone: "public" }
   - {port: "10257", proto: "tcp", state: "enabled", zone: "public" }
